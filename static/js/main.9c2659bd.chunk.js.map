{"version":3,"sources":["logo_50x50.png","locales/da/messages.js","config.js","api.js","eventManager.js","CreateUserModal.js","LoginModal.js","translateCountryCode.js","AddJidCode.js","UserButton.js","CountryPopup.js","App.js","serviceWorker.js","intlProvider.js","ErrorBoundary.js","index.js"],"names":["module","exports","languageData","n","ord","s","String","split","i","t0","Number","messages","a","api","serverUrl","this","_serverUrl","fetch","_getUrl","then","response","json","name","username","password","method","headers","body","JSON","stringify","jidCode","Authorization","localStorage","getItem","jid","toLowerCase","path","EVENT_TYPE","listeners","addListener","listener","push","removeListener","index","indexOf","splice","publish","event","forEach","CreateUserModal","open","handleClose","useState","setName","setUsername","setPassword","createUser","error","alert","setItem","token","type","Dialog","onClose","aria-labelledby","DialogTitle","id","i18n","DialogContent","TextField","autoFocus","margin","label","_","value","onChange","target","fullWidth","autoComplete","DialogActions","Button","onClick","color","variant","CreateUserButton","setOpen","LoginModal","handleLogin","login","loginResult","DialogContentText","LoginButton","translateCountryCode","countryCode","toUpperCase","JidCodeInput","props","inputRef","other","ref","inputElement","mask","placeholderChar","AddJidCodeModal","setJidCode","region","setRegion","setCountryCode","bingoCode","setBingoCode","suffix","setSuffix","errorCode","setErrorCode","canSave","length","incorrectCountryCodeForRegion","translatedRegion","translatedCountryCode","translateRegion","regionCountries","handleJidCode","newJidCode","substring","closeModal","handleSave","addJidCode","result","saved","handleKeyUp","key","maxWidth","style","minHeight","width","FormControl","marginBottom","InputLabel","htmlFor","Input","trim","inputComponent","onFocus","select","onKeyUp","FormHelperText","translateErrorCode","fontSize","disabled","AddJidCodeButton","startIcon","AddJidCodeMenuItem","MenuItem","UserButton","theme","useTheme","xs","useMediaQuery","breakpoints","down","anchorEl","setAnchorEl","isProfileMenuOpen","Boolean","getUserFromLocalStorage","user","jwtDecode","setUser","useEffect","loginListener","handleMenuClose","profileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","removeItem","loggedInButtons","currentTarget","CountryPopup","stats","feature","hoveredCountry","iso3to2","countryStats","countryMap","countryJidCount","jids","Popup","closeButton","App","withStyles","root","display","appBar","colorPrimary","title","marginLeft","flexGrow","content","paddingTop","flex","box","boxHeader","statNumber","textAlign","totals","padding","new","backgroundColor","classes","unique","countries","users","setStats","loading","setLoading","setHoveredCountry","zoomBounds","setZoomBounds","countryBounds","useMemo","refreshStats","backgroundFetch","getStats","reduce","lookupMap","country","console","warn","fetchStats","setInterval","addJidCodeAddedListener","newCountryIndicator","moment","subtract","className","AppBar","position","Toolbar","src","logoImage","height","alt","Typography","Grid","container","spacing","item","Paper","alignItems","justify","direction","sm","xl","center","zoom","bounds","GeoJSON","data","geoJson","statsCountry","firstCreated","created","weight","fillColor","isBefore","interactive","onEachFeature","layer","getBounds","on","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","component","scope","newlyCreated","IconButton","window","scrollTo","top","behavior","location","hostname","match","IntlProvider","usersLocale","navigator","language","catalogs","da","children","FallbackComponent","ErrorBoundary","fallback","showDialog","Sentry","dsn","release","process","environment","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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OAAO,kBAAC,QAAD,CAAO5B,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC,QAAD,CAAOA,GAAG,OACrB,IAAK,KACD,OAAO,kBAAC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","file":"static/js/main.9c2659bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_50x50.c2e75483.png\";","/* eslint-disable */module.exports={languageData:{\"plurals\":function(n,ord){var s=String(n).split(\".\"),i=s[0],t0=Number(s[0])==n;if(ord)return\"other\";return n==1||!t0&&(i==0||i==1)?\"one\":\"other\"}},messages:{\"AD\":\"Andorra\",\"AE\":\"Forenede Arabiske Emirater\",\"AF\":\"Afghanistan\",\"AG\":\"Antigua og Barbuda\",\"AI\":\"Anguilla\",\"AL\":\"Albanien\",\"AM\":\"Armenien\",\"AO\":\"Angola\",\"AQ\":\"Antarktis\",\"AR\":\"Argentina\",\"AS\":\"Amerikansk Samoa\",\"AT\":\"\\xD8strig\",\"AU\":\"Australien\",\"AW\":\"Aruba\",\"AX\":\"\\xC5lands\\xF8erne\",\"AZ\":\"Aserbajdsjan\",\"Add\":\"Tilf\\xF8j\",\"Add JID Code\":\"Tilf\\xF8j JID Kode\",\"Africa Scout Region\":\"Afrika spejderregion\",\"Arab Scout Region\":\"Arabiske spejderregion\",\"Asia-Pacific Scout Region\":\"Asien-Stillehavs spejderregion\",\"BA\":\"Bosnien-Hercegovina\",\"BB\":\"Barbados\",\"BD\":\"Bangladesh\",\"BE\":\"Belgien\",\"BF\":\"Burkina Faso\",\"BG\":\"Bulgarien\",\"BH\":\"Bahrain\",\"BI\":\"Burundi\",\"BJ\":\"Benin\",\"BL\":\"Skt. Barthelemy\",\"BM\":\"Bermuda\",\"BN\":\"Brunei\",\"BO\":\"Bolivia\",\"BQ\":\"Bonaire, Skt. Eustatius og Saba\",\"BR\":\"Brasilien\",\"BS\":\"Bahamas\",\"BT\":\"Bhutan\",\"BV\":\"Bouvet\\xF8en\",\"BW\":\"Botswana\",\"BY\":\"Hviderusland\",\"BZ\":\"Belize\",\"Bingo number\":\"Bingonummer\",\"CA\":\"Canada\",\"CC\":\"Cocos\\xF8erne\",\"CD\":\"Congo, Demokratiske Republik\",\"CF\":\"Centralafrikanske Republik\",\"CG\":\"Congo, Republikken\",\"CH\":\"Schweiz\",\"CI\":\"Elfenbenskysten\",\"CK\":\"Cook\\xF8erne\",\"CL\":\"Chile\",\"CM\":\"Cameroun\",\"CN\":\"Kina\",\"CO\":\"Colombia\",\"CR\":\"Costa Rica\",\"CU\":\"Cuba\",\"CV\":\"Kap Verde\",\"CW\":\"Curacao\",\"CX\":\"Jule\\xF8en\",\"CY\":\"Cypern\",\"CZ\":\"Tjekkiet\",\"Cancel\":\"Annuller\",\"Control character\":\"Kontroltegn\",\"Countries\":\"Lande\",\"Country name\":\"Landenavn\",\"Create user\":\"Opret bruger\",\"DE\":\"Tyskland\",\"DJ\":\"Djibouti\",\"DK\":\"Danmark\",\"DM\":\"Dominica\",\"DO\":\"Dominikanske Republik\",\"DZ\":\"Algeriet\",\"EC\":\"Ecuador\",\"EE\":\"Estland\",\"EG\":\"Egypten\",\"EH\":\"Vestsahara\",\"ER\":\"Eritrea\",\"ES\":\"Spanien\",\"ET\":\"Etiopien\",\"Eurasia Scout Region\":\"Eurasia spejderregion\",\"European Scout Region\":\"Den europ\\xE6iske spejderregion\",\"FI\":\"Finland\",\"FJ\":\"Fiji\",\"FK\":\"Falklands\\xF8erne\",\"FM\":\"Mikronesien\",\"FO\":\"F\\xE6r\\xF8erne\",\"FR\":\"Frankrig\",\"GA\":\"Gabon\",\"GB\":\"Storbritannien\",\"GD\":\"Grenada\",\"GE\":\"Georgien\",\"GF\":\"Fransk Guyana\",\"GG\":\"Guernsey\",\"GH\":\"Ghana\",\"GI\":\"Gibraltar\",\"GL\":\"Gr\\xF8nland\",\"GM\":\"Gambia\",\"GN\":\"Guinea\",\"GP\":\"Guadeloupe\",\"GQ\":\"\\xC6kvatorialguinea\",\"GR\":\"Gr\\xE6kenland\",\"GS\":\"Sydgeorgien og Sydsandwich\\xF8erne\",\"GT\":\"Guatemala\",\"GU\":\"Guam\",\"GW\":\"Guinea-Bissau\",\"GY\":\"Guyana\",\"HK\":\"Hongkong\",\"HM\":\"Heard- og McDonald\\xF8erne\",\"HN\":\"Honduras\",\"HR\":\"Kroatien\",\"HT\":\"Haiti\",\"HU\":\"Ungarn\",\"ID\":\"Indonesien\",\"IE\":\"Irland\",\"IL\":\"Israel\",\"IM\":\"Isle of Man\",\"IN\":\"Indien\",\"IO\":\"Britisk territorium i det Indiske Ocean\",\"IQ\":\"Irak\",\"IR\":\"Iran\",\"IS\":\"Island\",\"IT\":\"Italien\",\"If you do not have a user yet, click here:\":\"Hvis du ikke har en bruger endnu, klik her:\",\"Interamerican Scout Region\":\"Interamerikanske spejderregion\",\"JE\":\"Jersey\",\"JID Code\":\"JID Kode\",\"JM\":\"Jamaica\",\"JO\":\"Jordan\",\"JP\":\"Japan\",\"KE\":\"Kenya\",\"KG\":\"Kirgisistan\",\"KH\":\"Cambodja\",\"KI\":\"Kiribati\",\"KM\":\"Comorerne\",\"KN\":\"Skt. Kitts og Nevis\",\"KP\":\"Nordkorea\",\"KR\":\"Sydkorea\",\"KW\":\"Kuwait\",\"KY\":\"Cayman\\xF8erne\",\"KZ\":\"Kasakhstan\",\"LA\":\"Laos\",\"LB\":\"Libanon\",\"LC\":\"Skt. Lucia\",\"LI\":\"Liechtenstein\",\"LK\":\"Sri Lanka\",\"LR\":\"Liberia\",\"LS\":\"Lesotho\",\"LT\":\"Litauen\",\"LU\":\"Luxembourg\",\"LV\":\"Letland\",\"LY\":\"Libyen\",\"Loading\":\"Indl\\xE6ser\",\"Login\":\"Log ind\",\"Login to submit JID codes.\":\"Log ind for at indsende JID koder\",\"Logout\":\"Log ud\",\"MA\":\"Marokko\",\"MC\":\"Monaco\",\"MD\":\"Moldova\",\"ME\":\"Montenegro\",\"MF\":\"St. Martin (FR)\",\"MG\":\"Madagaskar\",\"MH\":\"Marshall\\xF8erne\",\"MK\":\"Nordmakedonien\",\"ML\":\"Mali\",\"MM\":\"Myanmar\",\"MN\":\"Mongoliet\",\"MO\":\"Macao\",\"MP\":\"Nordmarianerne\",\"MQ\":\"Martinique\",\"MR\":\"Mauretanien\",\"MS\":\"Montserrat\",\"MT\":\"Malta\",\"MU\":\"Mauritius\",\"MV\":\"Maldiverne\",\"MW\":\"Malawi\",\"MX\":\"Mexico\",\"MY\":\"Malaysia\",\"MZ\":\"Mozambique\",\"NA\":\"Namibia\",\"NC\":\"Ny Kaledonien\",\"NE\":\"Niger\",\"NF\":\"Norfolk\\xF8en\",\"NG\":\"Nigeria\",\"NI\":\"Nicaragua\",\"NL\":\"Nederlandene\",\"NO\":\"Norge\",\"NP\":\"Nepal\",\"NR\":\"Nauru\",\"NU\":\"Niue\",\"NZ\":\"New Zealand\",\"Name\":\"Navn\",\"OM\":\"Oman\",\"PA\":\"Panama\",\"PE\":\"Peru\",\"PF\":\"Fransk Polynesien\",\"PG\":\"Papua Ny Guinea\",\"PH\":\"Filippinerne\",\"PK\":\"Pakistan\",\"PL\":\"Polen\",\"PM\":\"Skt. Pierre og Miquelon\",\"PN\":\"Pitcairn\",\"PR\":\"Puerto Rico\",\"PS\":\"Pal\\xE6stina\",\"PT\":\"Portugal\",\"PW\":\"Palau\",\"PY\":\"Paraguay\",\"Password\":\"Kodeord\",\"QA\":\"Qatar\",\"RE\":\"Reunion\",\"RO\":\"Rum\\xE6nien\",\"RS\":\"Serbien\",\"RU\":\"Rusland\",\"RW\":\"Rwanda\",\"SA\":\"Saudi-Arabien\",\"SB\":\"Salomon\\xF8erne\",\"SC\":\"Seychellerne\",\"SD\":\"Sudan\",\"SE\":\"Sverige\",\"SG\":\"Singapore\",\"SH\":\"Skt. Helena\",\"SI\":\"Slovenien\",\"SJ\":\"Svalbard og Jan Mayen\",\"SK\":\"Slovakiet\",\"SL\":\"Sierra Leone\",\"SM\":\"San Marino\",\"SN\":\"Senegal\",\"SO\":\"Somalia\",\"SR\":\"Surinam\",\"SS\":\"Sydsudan\",\"ST\":\"Sao Tome og Principe\",\"SV\":\"El Salvador\",\"SX\":\"Skt. Martin (NL)\",\"SY\":\"Syrien\",\"SZ\":\"Swaziland\",\"Scoreboard\":\"Stillinger\",\"TC\":\"Turks- og Caicos\\xF8erne\",\"TD\":\"Tchad\",\"TF\":\"Franske Sydlige og Antarktiske Territorier\",\"TG\":\"Togo\",\"TH\":\"Thailand\",\"TJ\":\"Tadsjikistan\",\"TK\":\"Tokelau\",\"TL\":\"\\xD8sttimor\",\"TM\":\"Turkmenistan\",\"TN\":\"Tunesien\",\"TO\":\"Tonga\",\"TR\":\"Tyrkiet\",\"TT\":\"Trinidad og Tobago\",\"TV\":\"Tuvalu\",\"TW\":\"Taiwan\",\"TZ\":\"Tanzania\",\"Total number of JID codes: {0}\":function(a){return[\"Total antal JID koder: \",a(\"0\")]},\"UA\":\"Ukraine\",\"UG\":\"Uganda\",\"UM\":\"USA's mindre \\xF8besiddelser\",\"US\":\"USA\",\"UY\":\"Uruguay\",\"UZ\":\"Usbekistan\",\"Unique JID codes: {0}\":function(a){return[\"Unikke JID koder: \",a(\"0\")]},\"Unique codes\":\"Unikke koder\",\"Unique countries: {0}\":function(a){return[\"Unikke lande: \",a(\"0\")]},\"Username\":\"Brugernavn\",\"VA\":\"Vatikanstaten\",\"VC\":\"Skt. Vincent og Grenadinerne\",\"VE\":\"Venezuela\",\"VG\":\"Britiske Jomfru\\xF8er\",\"VI\":\"Amerikanske Jomfru\\xF8er\",\"VN\":\"Vietnam\",\"VU\":\"Vanuatu\",\"WF\":\"Wallis og Futuna\",\"WS\":\"Samoa\",\"YE\":\"Yemen\",\"YT\":\"Mayotte\",\"ZA\":\"Sydafrika\",\"ZM\":\"Zambia\",\"ZW\":\"Zimbabwe\",\"error.addJid.duplicate\":\"Du har allerede tilf\\xF8jet koden\",\"error.invalidCountryForRegion\":function(a){return[\"JID koden ser forkert ud. Landet \",a(\"countryCode\"),\" (\",a(\"translatedCountryCode\"),\") tilh\\xF8rer ikke regionen \",a(\"region\"),\" (\",a(\"translatedRegion\"),\")\"]}}};","import {Api} from \"./api\";\n\nexport const api = new Api('https://jid-api.billestauner.dk');\nexport const newCountryTime = 30; // minutes old\n","export class Api {\n\n    constructor(serverUrl) {\n        this._serverUrl = serverUrl;\n    }\n\n    async getStats() {\n        return fetch(this._getUrl('/stats')).then(response => response.json());\n    }\n\n    async createUser(name, username, password) {\n        return fetch(this._getUrl('/createUser'), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                    name,\n                    username,\n                    password\n                }\n            )\n        }).then(response => response.json());\n    }\n\n    async login(username, password) {\n        return fetch(this._getUrl('/login'), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                    username,\n                    password\n                }\n            )\n        }).then(response => response.json());\n    }\n\n    async addJidCode(jidCode) {\n        return fetch(this._getUrl('/jid'), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: localStorage.getItem('token')\n            },\n            body: JSON.stringify({jid: jidCode.toLowerCase()})\n        }).then(response => response.json());\n    }\n\n    _getUrl(path) {\n        return `${this._serverUrl}${path}`;\n    }\n\n}\n","export const EVENT_TYPE = {\n    LOGIN: 'LOGIN',\n    JID_CODE_ADDED: 'JID_CODE_ADDED',\n};\n\nconst listeners = [];\n\nexport const addListener = listener => {\n    listeners.push(listener);\n};\n\nexport const removeListener = listener => {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n        listeners.splice(index, 1);\n    }\n};\n\nexport const publish = event => {\n    listeners.forEach(listener => listener(event));\n};\n","import React, {useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {t, Trans} from \"@lingui/macro\";\nimport {I18n} from \"@lingui/react\";\nimport {api} from \"./config\";\nimport {EVENT_TYPE, publish} from \"./eventManager\";\n\nconst CreateUserModal = ({open, handleClose}) => {\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const createUser = async () => {\n        const response = await api.createUser(name, username, password);\n        if (response.error) {\n            alert(response.error);\n            return;\n        }\n        localStorage.setItem('token', response.token);\n        publish({\n            type: EVENT_TYPE.LOGIN\n        });\n        handleClose();\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\"><Trans>Create user</Trans></DialogTitle>\n            <I18n>\n                {({i18n}) => (\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label={i18n._(t`Name`)}\n                            value={name}\n                            type=\"text\"\n                            onChange={event => setName(event.target.value)}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"username\"\n                            label={i18n._(t`Username`)}\n                            value={username}\n                            type=\"text\"\n                            onChange={event => setUsername(event.target.value)}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"password\"\n                            label={i18n._(t`Password`)}\n                            value={password}\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={event => setPassword(event.target.value)}\n                            fullWidth\n                        />\n                    </DialogContent>\n                )}\n            </I18n>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    <Trans>Cancel</Trans>\n                </Button>\n                <Button onClick={createUser} color=\"primary\" variant=\"contained\">\n                    <Trans>Create user</Trans>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport const CreateUserButton = ({onClose}) => {\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <Button color=\"inherit\" onClick={() => setOpen(true)}><Trans>Create user</Trans></Button>\n        <CreateUserModal open={open} handleClose={() => {\n            setOpen(false);\n            onClose();\n        }}/>\n    </>;\n};\n","import React, {useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {t, Trans} from \"@lingui/macro\";\nimport {I18n} from \"@lingui/react\";\nimport {CreateUserButton} from \"./CreateUserModal\";\nimport {api} from \"./config\";\nimport {EVENT_TYPE, publish} from \"./eventManager\";\n\nconst LoginModal = ({open, handleClose}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = async () => {\n        const loginResult = await api.login(username, password);\n        if (loginResult.error) {\n            alert(loginResult.error);\n            return;\n        }\n        localStorage.setItem('token', loginResult.token);\n        publish({\n            type: EVENT_TYPE.LOGIN\n        });\n        handleClose();\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\"><Trans>Login</Trans></DialogTitle>\n            <I18n>\n                {({i18n}) => (\n                    <DialogContent>\n                        <DialogContentText>\n                            <Trans>Login to submit JID codes.</Trans>\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"username\"\n                            label={i18n._(t`Username`)}\n                            value={username}\n                            type=\"text\"\n                            onChange={event => setUsername(event.target.value)}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"password\"\n                            label={i18n._(t`Password`)}\n                            value={password}\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={event => setPassword(event.target.value)}\n                            fullWidth\n                        />\n                        <DialogContentText>\n                            <br/><br/>\n                            <Trans>If you do not have a user yet, click here:</Trans>\n                            <CreateUserButton onClose={handleClose}/>\n                        </DialogContentText>\n                    </DialogContent>\n                )}\n            </I18n>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    <Trans>Cancel</Trans>\n                </Button>\n                <Button onClick={handleLogin} color=\"primary\" variant=\"contained\">\n                    <Trans>Login</Trans>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport const LoginButton = () => {\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <Button color=\"inherit\" onClick={() => setOpen(true)}><Trans>Login</Trans></Button>\n        <LoginModal open={open} handleClose={() => setOpen(false)}/>\n    </>;\n};\n","import React from \"react\";\nimport {Trans} from \"@lingui/macro\";\n\nexport const translateCountryCode = countryCode => {\n    switch (countryCode.toUpperCase()) {\n        case 'AF':\n            return <Trans id=\"AF\">Afghanistan</Trans>;\n        case 'AX':\n            return <Trans id=\"AX\">\\u00c5land Islands</Trans>;\n        case 'AL':\n            return <Trans id=\"AL\">Albania</Trans>;\n        case 'DZ':\n            return <Trans id=\"DZ\">Algeria</Trans>;\n        case 'AS':\n            return <Trans id=\"AS\">American Samoa</Trans>;\n        case 'AD':\n            return <Trans id=\"AD\">Andorra</Trans>;\n        case 'AO':\n            return <Trans id=\"AO\">Angola</Trans>;\n        case 'AI':\n            return <Trans id=\"AI\">Anguilla</Trans>;\n        case 'AQ':\n            return <Trans id=\"AQ\">Antarctica</Trans>;\n        case 'AG':\n            return <Trans id=\"AG\">Antigua and Barbuda</Trans>;\n        case 'AR':\n            return <Trans id=\"AR\">Argentina</Trans>;\n        case 'AM':\n            return <Trans id=\"AM\">Armenia</Trans>;\n        case 'AW':\n            return <Trans id=\"AW\">Aruba</Trans>;\n        case 'AU':\n            return <Trans id=\"AU\">Australia</Trans>;\n        case 'AT':\n            return <Trans id=\"AT\">Austria</Trans>;\n        case 'AZ':\n            return <Trans id=\"AZ\">Azerbaijan</Trans>;\n        case 'BS':\n            return <Trans id=\"BS\">Bahamas</Trans>;\n        case 'BH':\n            return <Trans id=\"BH\">Bahrain</Trans>;\n        case 'BD':\n            return <Trans id=\"BD\">Bangladesh</Trans>;\n        case 'BB':\n            return <Trans id=\"BB\">Barbados</Trans>;\n        case 'BY':\n            return <Trans id=\"BY\">Belarus</Trans>;\n        case 'BE':\n            return <Trans id=\"BE\">Belgium</Trans>;\n        case 'BZ':\n            return <Trans id=\"BZ\">Belize</Trans>;\n        case 'BJ':\n            return <Trans id=\"BJ\">Benin</Trans>;\n        case 'BM':\n            return <Trans id=\"BM\">Bermuda</Trans>;\n        case 'BT':\n            return <Trans id=\"BT\">Bhutan</Trans>;\n        case 'BO':\n            return <Trans id=\"BO\">Bolivia, Plurinational State of</Trans>;\n        case 'BQ':\n            return <Trans id=\"BQ\">Bonaire, Sint Eustatius and Saba</Trans>;\n        case 'BA':\n            return <Trans id=\"BA\">Bosnia and Herzegovina</Trans>;\n        case 'BW':\n            return <Trans id=\"BW\">Botswana</Trans>;\n        case 'BV':\n            return <Trans id=\"BV\">Bouvet Island</Trans>;\n        case 'BR':\n            return <Trans id=\"BR\">Brazil</Trans>;\n        case 'IO':\n            return <Trans id=\"IO\">British Indian Ocean Territory</Trans>;\n        case 'BN':\n            return <Trans id=\"BN\">Brunei Darussalam</Trans>;\n        case 'BG':\n            return <Trans id=\"BG\">Bulgaria</Trans>;\n        case 'BF':\n            return <Trans id=\"BF\">Burkina Faso</Trans>;\n        case 'BI':\n            return <Trans id=\"BI\">Burundi</Trans>;\n        case 'KH':\n            return <Trans id=\"KH\">Cambodia</Trans>;\n        case 'CM':\n            return <Trans id=\"CM\">Cameroon</Trans>;\n        case 'CA':\n            return <Trans id=\"CA\">Canada</Trans>;\n        case 'CV':\n            return <Trans id=\"CV\">Cape Verde</Trans>;\n        case 'KY':\n            return <Trans id=\"KY\">Cayman Islands</Trans>;\n        case 'CF':\n            return <Trans id=\"CF\">Central African Republic</Trans>;\n        case 'TD':\n            return <Trans id=\"TD\">Chad</Trans>;\n        case 'CL':\n            return <Trans id=\"CL\">Chile</Trans>;\n        case 'CN':\n            return <Trans id=\"CN\">China</Trans>;\n        case 'CX':\n            return <Trans id=\"CX\">Christmas Island</Trans>;\n        case 'CC':\n            return <Trans id=\"CC\">Cocos (Keeling) Islands</Trans>;\n        case 'CO':\n            return <Trans id=\"CO\">Colombia</Trans>;\n        case 'KM':\n            return <Trans id=\"KM\">Comoros</Trans>;\n        case 'CG':\n            return <Trans id=\"CG\">Congo</Trans>;\n        case 'CD':\n            return <Trans id=\"CD\">Congo, the Democratic Republic of the</Trans>;\n        case 'CK':\n            return <Trans id=\"CK\">Cook Islands</Trans>;\n        case 'CR':\n            return <Trans id=\"CR\">Costa Rica</Trans>;\n        case 'CI':\n            return <Trans id=\"CI\">C\\u00f4te d'Ivoire</Trans>;\n        case 'HR':\n            return <Trans id=\"HR\">Croatia</Trans>;\n        case 'CU':\n            return <Trans id=\"CU\">Cuba</Trans>;\n        case 'CW':\n            return <Trans id=\"CW\">Cura\\u00e7ao</Trans>;\n        case 'CY':\n            return <Trans id=\"CY\">Cyprus</Trans>;\n        case 'CZ':\n            return <Trans id=\"CZ\">Czech Republic</Trans>;\n        case 'DK':\n            return <Trans id=\"DK\">Denmark</Trans>;\n        case 'DJ':\n            return <Trans id=\"DJ\">Djibouti</Trans>;\n        case 'DM':\n            return <Trans id=\"DM\">Dominica</Trans>;\n        case 'DO':\n            return <Trans id=\"DO\">Dominican Republic</Trans>;\n        case 'EC':\n            return <Trans id=\"EC\">Ecuador</Trans>;\n        case 'EG':\n            return <Trans id=\"EG\">Egypt</Trans>;\n        case 'SV':\n            return <Trans id=\"SV\">El Salvador</Trans>;\n        case 'GQ':\n            return <Trans id=\"GQ\">Equatorial Guinea</Trans>;\n        case 'ER':\n            return <Trans id=\"ER\">Eritrea</Trans>;\n        case 'EE':\n            return <Trans id=\"EE\">Estonia</Trans>;\n        case 'ET':\n            return <Trans id=\"ET\">Ethiopia</Trans>;\n        case 'FK':\n            return <Trans id=\"FK\">Falkland Islands (Malvinas)</Trans>;\n        case 'FO':\n            return <Trans id=\"FO\">Faroe Islands</Trans>;\n        case 'FJ':\n            return <Trans id=\"FJ\">Fiji</Trans>;\n        case 'FI':\n            return <Trans id=\"FI\">Finland</Trans>;\n        case 'FR':\n            return <Trans id=\"FR\">France</Trans>;\n        case 'GF':\n            return <Trans id=\"GF\">French Guiana</Trans>;\n        case 'PF':\n            return <Trans id=\"PF\">French Polynesia</Trans>;\n        case 'TF':\n            return <Trans id=\"TF\">French Southern Territories</Trans>;\n        case 'GA':\n            return <Trans id=\"GA\">Gabon</Trans>;\n        case 'GM':\n            return <Trans id=\"GM\">Gambia</Trans>;\n        case 'GE':\n            return <Trans id=\"GE\">Georgia</Trans>;\n        case 'DE':\n            return <Trans id=\"DE\">Germany</Trans>;\n        case 'GH':\n            return <Trans id=\"GH\">Ghana</Trans>;\n        case 'GI':\n            return <Trans id=\"GI\">Gibraltar</Trans>;\n        case 'GR':\n            return <Trans id=\"GR\">Greece</Trans>;\n        case 'GL':\n            return <Trans id=\"GL\">Greenland</Trans>;\n        case 'GD':\n            return <Trans id=\"GD\">Grenada</Trans>;\n        case 'GP':\n            return <Trans id=\"GP\">Guadeloupe</Trans>;\n        case 'GU':\n            return <Trans id=\"GU\">Guam</Trans>;\n        case 'GT':\n            return <Trans id=\"GT\">Guatemala</Trans>;\n        case 'GG':\n            return <Trans id=\"GG\">Guernsey</Trans>;\n        case 'GN':\n            return <Trans id=\"GN\">Guinea</Trans>;\n        case 'GW':\n            return <Trans id=\"GW\">Guinea-Bissau</Trans>;\n        case 'GY':\n            return <Trans id=\"GY\">Guyana</Trans>;\n        case 'HT':\n            return <Trans id=\"HT\">Haiti</Trans>;\n        case 'HM':\n            return <Trans id=\"HM\">Heard Island and McDonald Islands</Trans>;\n        case 'VA':\n            return <Trans id=\"VA\">Holy See (Vatican City State)</Trans>;\n        case 'HN':\n            return <Trans id=\"HN\">Honduras</Trans>;\n        case 'HK':\n            return <Trans id=\"HK\">Hong Kong</Trans>;\n        case 'HU':\n            return <Trans id=\"HU\">Hungary</Trans>;\n        case 'IS':\n            return <Trans id=\"IS\">Iceland</Trans>;\n        case 'IN':\n            return <Trans id=\"IN\">India</Trans>;\n        case 'ID':\n            return <Trans id=\"ID\">Indonesia</Trans>;\n        case 'IR':\n            return <Trans id=\"IR\">Iran, Islamic Republic of</Trans>;\n        case 'IQ':\n            return <Trans id=\"IQ\">Iraq</Trans>;\n        case 'IE':\n            return <Trans id=\"IE\">Ireland</Trans>;\n        case 'IM':\n            return <Trans id=\"IM\">Isle of Man</Trans>;\n        case 'IL':\n            return <Trans id=\"IL\">Israel</Trans>;\n        case 'IT':\n            return <Trans id=\"IT\">Italy</Trans>;\n        case 'JM':\n            return <Trans id=\"JM\">Jamaica</Trans>;\n        case 'JP':\n            return <Trans id=\"JP\">Japan</Trans>;\n        case 'JE':\n            return <Trans id=\"JE\">Jersey</Trans>;\n        case 'JO':\n            return <Trans id=\"JO\">Jordan</Trans>;\n        case 'KZ':\n            return <Trans id=\"KZ\">Kazakhstan</Trans>;\n        case 'KE':\n            return <Trans id=\"KE\">Kenya</Trans>;\n        case 'KI':\n            return <Trans id=\"KI\">Kiribati</Trans>;\n        case 'KP':\n            return <Trans id=\"KP\">Korea, Democratic People's Republic of</Trans>;\n        case 'KR':\n            return <Trans id=\"KR\">Korea, Republic of</Trans>;\n        case 'KW':\n            return <Trans id=\"KW\">Kuwait</Trans>;\n        case 'KG':\n            return <Trans id=\"KG\">Kyrgyzstan</Trans>;\n        case 'LA':\n            return <Trans id=\"LA\">Lao People's Democratic Republic</Trans>;\n        case 'LV':\n            return <Trans id=\"LV\">Latvia</Trans>;\n        case 'LB':\n            return <Trans id=\"LB\">Lebanon</Trans>;\n        case 'LS':\n            return <Trans id=\"LS\">Lesotho</Trans>;\n        case 'LR':\n            return <Trans id=\"LR\">Liberia</Trans>;\n        case 'LY':\n            return <Trans id=\"LY\">Libya</Trans>;\n        case 'LI':\n            return <Trans id=\"LI\">Liechtenstein</Trans>;\n        case 'LT':\n            return <Trans id=\"LT\">Lithuania</Trans>;\n        case 'LU':\n            return <Trans id=\"LU\">Luxembourg</Trans>;\n        case 'MO':\n            return <Trans id=\"MO\">Macao</Trans>;\n        case 'MK':\n            return <Trans id=\"MK\">Macedonia, the Former Yugoslav Republic of</Trans>;\n        case 'MG':\n            return <Trans id=\"MG\">Madagascar</Trans>;\n        case 'MW':\n            return <Trans id=\"MW\">Malawi</Trans>;\n        case 'MY':\n            return <Trans id=\"MY\">Malaysia</Trans>;\n        case 'MV':\n            return <Trans id=\"MV\">Maldives</Trans>;\n        case 'ML':\n            return <Trans id=\"ML\">Mali</Trans>;\n        case 'MT':\n            return <Trans id=\"MT\">Malta</Trans>;\n        case 'MH':\n            return <Trans id=\"MH\">Marshall Islands</Trans>;\n        case 'MQ':\n            return <Trans id=\"MQ\">Martinique</Trans>;\n        case 'MR':\n            return <Trans id=\"MR\">Mauritania</Trans>;\n        case 'MU':\n            return <Trans id=\"MU\">Mauritius</Trans>;\n        case 'YT':\n            return <Trans id=\"YT\">Mayotte</Trans>;\n        case 'MX':\n            return <Trans id=\"MX\">Mexico</Trans>;\n        case 'FM':\n            return <Trans id=\"FM\">Micronesia, Federated States of</Trans>;\n        case 'MD':\n            return <Trans id=\"MD\">Moldova, Republic of</Trans>;\n        case 'MC':\n            return <Trans id=\"MC\">Monaco</Trans>;\n        case 'MN':\n            return <Trans id=\"MN\">Mongolia</Trans>;\n        case 'ME':\n            return <Trans id=\"ME\">Montenegro</Trans>;\n        case 'MS':\n            return <Trans id=\"MS\">Montserrat</Trans>;\n        case 'MA':\n            return <Trans id=\"MA\">Morocco</Trans>;\n        case 'MZ':\n            return <Trans id=\"MZ\">Mozambique</Trans>;\n        case 'MM':\n            return <Trans id=\"MM\">Myanmar</Trans>;\n        case 'NA':\n            return <Trans id=\"NA\">Namibia</Trans>;\n        case 'NR':\n            return <Trans id=\"NR\">Nauru</Trans>;\n        case 'NP':\n            return <Trans id=\"NP\">Nepal</Trans>;\n        case 'NL':\n            return <Trans id=\"NL\">Netherlands</Trans>;\n        case 'NC':\n            return <Trans id=\"NC\">New Caledonia</Trans>;\n        case 'NZ':\n            return <Trans id=\"NZ\">New Zealand</Trans>;\n        case 'NI':\n            return <Trans id=\"NI\">Nicaragua</Trans>;\n        case 'NE':\n            return <Trans id=\"NE\">Niger</Trans>;\n        case 'NG':\n            return <Trans id=\"NG\">Nigeria</Trans>;\n        case 'NU':\n            return <Trans id=\"NU\">Niue</Trans>;\n        case 'NF':\n            return <Trans id=\"NF\">Norfolk Island</Trans>;\n        case 'MP':\n            return <Trans id=\"MP\">Northern Mariana Islands</Trans>;\n        case 'NO':\n            return <Trans id=\"NO\">Norway</Trans>;\n        case 'OM':\n            return <Trans id=\"OM\">Oman</Trans>;\n        case 'PK':\n            return <Trans id=\"PK\">Pakistan</Trans>;\n        case 'PW':\n            return <Trans id=\"PW\">Palau</Trans>;\n        case 'PS':\n            return <Trans id=\"PS\">Palestine, State of</Trans>;\n        case 'PA':\n            return <Trans id=\"PA\">Panama</Trans>;\n        case 'PG':\n            return <Trans id=\"PG\">Papua New Guinea</Trans>;\n        case 'PY':\n            return <Trans id=\"PY\">Paraguay</Trans>;\n        case 'PE':\n            return <Trans id=\"PE\">Peru</Trans>;\n        case 'PH':\n            return <Trans id=\"PH\">Philippines</Trans>;\n        case 'PN':\n            return <Trans id=\"PN\">Pitcairn</Trans>;\n        case 'PL':\n            return <Trans id=\"PL\">Poland</Trans>;\n        case 'PT':\n            return <Trans id=\"PT\">Portugal</Trans>;\n        case 'PR':\n            return <Trans id=\"PR\">Puerto Rico</Trans>;\n        case 'QA':\n            return <Trans id=\"QA\">Qatar</Trans>;\n        case 'RE':\n            return <Trans id=\"RE\">R\\u00e9union</Trans>;\n        case 'RO':\n            return <Trans id=\"RO\">Romania</Trans>;\n        case 'RU':\n            return <Trans id=\"RU\">Russian Federation</Trans>;\n        case 'RW':\n            return <Trans id=\"RW\">Rwanda</Trans>;\n        case 'BL':\n            return <Trans id=\"BL\">Saint Barth\\u00e9lemy</Trans>;\n        case 'SH':\n            return <Trans id=\"SH\">Saint Helena, Ascension and Tristan da Cunha</Trans>;\n        case 'KN':\n            return <Trans id=\"KN\">Saint Kitts and Nevis</Trans>;\n        case 'LC':\n            return <Trans id=\"LC\">Saint Lucia</Trans>;\n        case 'MF':\n            return <Trans id=\"MF\">Saint Martin (French part)</Trans>;\n        case 'PM':\n            return <Trans id=\"PM\">Saint Pierre and Miquelon</Trans>;\n        case 'VC':\n            return <Trans id=\"VC\">Saint Vincent and the Grenadines</Trans>;\n        case 'WS':\n            return <Trans id=\"WS\">Samoa</Trans>;\n        case 'SM':\n            return <Trans id=\"SM\">San Marino</Trans>;\n        case 'ST':\n            return <Trans id=\"ST\">Sao Tome and Principe</Trans>;\n        case 'SA':\n            return <Trans id=\"SA\">Saudi Arabia</Trans>;\n        case 'SN':\n            return <Trans id=\"SN\">Senegal</Trans>;\n        case 'RS':\n            return <Trans id=\"RS\">Serbia</Trans>;\n        case 'SC':\n            return <Trans id=\"SC\">Seychelles</Trans>;\n        case 'SL':\n            return <Trans id=\"SL\">Sierra Leone</Trans>;\n        case 'SG':\n            return <Trans id=\"SG\">Singapore</Trans>;\n        case 'SX':\n            return <Trans id=\"SX\">Sint Maarten (Dutch part)</Trans>;\n        case 'SK':\n            return <Trans id=\"SK\">Slovakia</Trans>;\n        case 'SI':\n            return <Trans id=\"SI\">Slovenia</Trans>;\n        case 'SB':\n            return <Trans id=\"SB\">Solomon Islands</Trans>;\n        case 'SO':\n            return <Trans id=\"SO\">Somalia</Trans>;\n        case 'ZA':\n            return <Trans id=\"ZA\">South Africa</Trans>;\n        case 'GS':\n            return <Trans id=\"GS\">South Georgia and the South Sandwich Islands</Trans>;\n        case 'SS':\n            return <Trans id=\"SS\">South Sudan</Trans>;\n        case 'ES':\n            return <Trans id=\"ES\">Spain</Trans>;\n        case 'LK':\n            return <Trans id=\"LK\">Sri Lanka</Trans>;\n        case 'SD':\n            return <Trans id=\"SD\">Sudan</Trans>;\n        case 'SR':\n            return <Trans id=\"SR\">Suriname</Trans>;\n        case 'SJ':\n            return <Trans id=\"SJ\">Svalbard and Jan Mayen</Trans>;\n        case 'SZ':\n            return <Trans id=\"SZ\">Swaziland</Trans>;\n        case 'SE':\n            return <Trans id=\"SE\">Sweden</Trans>;\n        case 'CH':\n            return <Trans id=\"CH\">Switzerland</Trans>;\n        case 'SY':\n            return <Trans id=\"SY\">Syrian Arab Republic</Trans>;\n        case 'TW':\n            return <Trans id=\"TW\">Taiwan, Province of China</Trans>;\n        case 'TJ':\n            return <Trans id=\"TJ\">Tajikistan</Trans>;\n        case 'TZ':\n            return <Trans id=\"TZ\">Tanzania, United Republic of</Trans>;\n        case 'TH':\n            return <Trans id=\"TH\">Thailand</Trans>;\n        case 'TL':\n            return <Trans id=\"TL\">Timor-Leste</Trans>;\n        case 'TG':\n            return <Trans id=\"TG\">Togo</Trans>;\n        case 'TK':\n            return <Trans id=\"TK\">Tokelau</Trans>;\n        case 'TO':\n            return <Trans id=\"TO\">Tonga</Trans>;\n        case 'TT':\n            return <Trans id=\"TT\">Trinidad and Tobago</Trans>;\n        case 'TN':\n            return <Trans id=\"TN\">Tunisia</Trans>;\n        case 'TR':\n            return <Trans id=\"TR\">Turkey</Trans>;\n        case 'TM':\n            return <Trans id=\"TM\">Turkmenistan</Trans>;\n        case 'TC':\n            return <Trans id=\"TC\">Turks and Caicos Islands</Trans>;\n        case 'TV':\n            return <Trans id=\"TV\">Tuvalu</Trans>;\n        case 'UG':\n            return <Trans id=\"UG\">Uganda</Trans>;\n        case 'UA':\n            return <Trans id=\"UA\">Ukraine</Trans>;\n        case 'AE':\n            return <Trans id=\"AE\">United Arab Emirates</Trans>;\n        case 'GB':\n            return <Trans id=\"GB\">United Kingdom</Trans>;\n        case 'US':\n            return <Trans id=\"US\">United States</Trans>;\n        case 'UM':\n            return <Trans id=\"UM\">United States Minor Outlying Islands</Trans>;\n        case 'UY':\n            return <Trans id=\"UY\">Uruguay</Trans>;\n        case 'UZ':\n            return <Trans id=\"UZ\">Uzbekistan</Trans>;\n        case 'VU':\n            return <Trans id=\"VU\">Vanuatu</Trans>;\n        case 'VE':\n            return <Trans id=\"VE\">Venezuela, Bolivarian Republic of</Trans>;\n        case 'VN':\n            return <Trans id=\"VN\">Viet Nam</Trans>;\n        case 'VG':\n            return <Trans id=\"VG\">Virgin Islands, British</Trans>;\n        case 'VI':\n            return <Trans id=\"VI\">Virgin Islands, U.S.</Trans>;\n        case 'WF':\n            return <Trans id=\"WF\">Wallis and Futuna</Trans>;\n        case 'EH':\n            return <Trans id=\"EH\">Western Sahara</Trans>;\n        case 'YE':\n            return <Trans id=\"YE\">Yemen</Trans>;\n        case 'ZM':\n            return <Trans id=\"ZM\">Zambia</Trans>;\n        case 'ZW':\n            return <Trans id=\"ZW\">Zimbabwe</Trans>;\n        default:\n            return null;\n    }\n};\n","import React, {useState} from \"react\";\nimport {Trans} from \"@lingui/macro\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    FormControl,\n    FormHelperText,\n    Input,\n    InputLabel,\n    MenuItem,\n} from \"@material-ui/core\";\nimport MaskedInput from \"react-text-mask/dist/reactTextMask\";\n\nimport {api} from \"./config\";\nimport regionCountries from './regionCountries';\nimport {translateCountryCode} from \"./translateCountryCode\";\nimport {EVENT_TYPE, publish} from \"./eventManager\";\n\nconst translateRegion = region => {\n    switch (region) {\n        case '1':\n            return <Trans>Africa Scout Region</Trans>;\n        case '2':\n            return <Trans>Arab Scout Region</Trans>;\n        case '3':\n            return <Trans>Asia-Pacific Scout Region</Trans>;\n        case '4':\n            return <Trans>Eurasia Scout Region</Trans>;\n        case '5':\n            return <Trans>European Scout Region</Trans>;\n        case '6':\n            return <Trans>Interamerican Scout Region</Trans>;\n        default:\n            return null;\n    }\n};\n\nconst translateErrorCode = errorCode => {\n    switch (errorCode) {\n        case 'DUPLICATE':\n            return <Trans id=\"error.addJid.duplicate\">You have added the key already.</Trans>;\n        default:\n            return null;\n    }\n};\n\nconst JidCodeInput = props => {\n    const {inputRef, ...other} = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[/[1-6]/, /[a-zA-Z]/, /[a-zA-Z]/, /[0-9]/, /[0-9]/, /[a-zA-Z]/]}\n            placeholderChar={'\\u2000'}\n        />\n    );\n};\n\nconst AddJidCodeModal = ({open, handleClose}) => {\n    const [jidCode, setJidCode] = useState('');\n    const [region, setRegion] = useState('');\n    const [countryCode, setCountryCode] = useState('');\n    const [bingoCode, setBingoCode] = useState('');\n    const [suffix, setSuffix] = useState('');\n    const [errorCode, setErrorCode] = useState(null);\n\n    const canSave = jidCode.length === 6;\n    let incorrectCountryCodeForRegion = false;\n    let translatedRegion = null;\n    let translatedCountryCode = null;\n    if (region) {\n        translatedRegion = translateRegion(region);\n\n        if (countryCode) {\n            translatedCountryCode = translateCountryCode(countryCode);\n            if (regionCountries[region].indexOf(countryCode) === -1) {\n                incorrectCountryCodeForRegion = true;\n            }\n        }\n    }\n\n    const handleJidCode = newJidCode => {\n        if (newJidCode.length >= 1) {\n            setRegion(newJidCode[0]);\n        } else {\n            setRegion('');\n        }\n        if (newJidCode.length >= 3) {\n            setCountryCode(newJidCode.substring(1, 3));\n        } else {\n            setCountryCode('');\n        }\n        if (newJidCode.length >= 5) {\n            setBingoCode(newJidCode.substring(3, 5));\n        } else {\n            setBingoCode('');\n        }\n        if (newJidCode.length === 6) {\n            setSuffix(newJidCode[5]);\n        } else {\n            setSuffix('');\n        }\n\n        setJidCode(newJidCode);\n    };\n\n    const handleChangeJidCode = event => {\n        const newJidCode = event.target.value.toUpperCase().trim();\n        handleJidCode(newJidCode);\n    };\n\n    const closeModal = () => {\n        handleJidCode('');\n        setErrorCode(null);\n        handleClose();\n    };\n\n    const handleSave = async () => {\n        const result = await api.addJidCode(jidCode);\n        if (result.saved) {\n            publish({\n                type: EVENT_TYPE.JID_CODE_ADDED\n            });\n            closeModal();\n        } else {\n            setErrorCode(result.errorCode);\n        }\n    };\n\n    const handleKeyUp = async event => {\n        if (event.key === 'Enter' && canSave) {\n            await handleSave()\n        }\n    };\n\n    return (\n        <Dialog open={open} onClose={closeModal} maxWidth=\"xs\" aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\"><Trans>Add JID Code</Trans></DialogTitle>\n            <DialogContent style={{minHeight: 250, width: 300}}>\n                <FormControl fullWidth style={{marginBottom: 40}} error={!!errorCode}>\n                    <InputLabel htmlFor=\"formatted-text-mask-input\"><Trans>JID Code</Trans></InputLabel>\n                    <Input\n                        value={jidCode}\n                        onChange={handleChangeJidCode}\n                        name=\"textmask\"\n                        id=\"formatted-text-mask-input\"\n                        inputComponent={JidCodeInput}\n                        onFocus={event => event.target.select()}\n                        onKeyUp={handleKeyUp}\n                        autoFocus\n                        autoComplete=\"off\"\n                    />\n                    <FormHelperText id=\"component-helper-text\">{translateErrorCode(errorCode)}</FormHelperText>\n                </FormControl>\n                {incorrectCountryCodeForRegion ? <DialogContentText style={{color: 'red', fontSize: '13px'}}>\n                    <Trans id=\"error.invalidCountryForRegion\">The JID code looks incorrect. The\n                        country {countryCode} ({translatedCountryCode})\n                        doesn't belong to the region {region} ({translatedRegion})</Trans>\n                </DialogContentText> : null}\n                {region ? <DialogContentText>\n                    {region} = {translatedRegion}\n                </DialogContentText> : null}\n                {countryCode.length === 2 ? <DialogContentText>\n                    {countryCode.toUpperCase()} = {translatedCountryCode}\n                </DialogContentText> : null}\n                {bingoCode.length === 2 ? <DialogContentText>\n                    {bingoCode} = <Trans>Bingo number</Trans>\n                </DialogContentText> : null}\n                {suffix ? <DialogContentText>\n                    {suffix} = <Trans>Control character</Trans>\n                </DialogContentText> : null}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeModal} color=\"primary\">\n                    <Trans>Cancel</Trans>\n                </Button>\n                <Button onClick={handleSave} color=\"primary\" disabled={!canSave} variant=\"contained\">\n                    <Trans>Add</Trans>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport const AddJidCodeButton = () => {\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <Button color=\"inherit\" startIcon={<AddIcon/>} onClick={() => setOpen(true)}>\n            <Trans>Add JID Code</Trans>\n        </Button>\n        <AddJidCodeModal open={open} handleClose={() => setOpen(false)}/>\n    </>;\n};\n\nexport const AddJidCodeMenuItem = () => {\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <MenuItem onClick={() => setOpen(true)}><Trans>Add JID Code</Trans></MenuItem>\n        <AddJidCodeModal open={open} handleClose={() => setOpen(false)}/>\n    </>;\n};\n","import React, {useEffect, useState} from \"react\";\nimport {useMediaQuery} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {useTheme} from \"@material-ui/core/styles\";\nimport {Trans} from \"@lingui/macro\";\nimport jwtDecode from 'jwt-decode';\nimport {LoginButton} from \"./LoginModal\";\nimport {addListener, EVENT_TYPE, removeListener} from \"./eventManager\";\nimport {AddJidCodeButton, AddJidCodeMenuItem} from \"./AddJidCode\";\n\nexport const UserButton = () => {\n    const theme = useTheme();\n    const xs = useMediaQuery(theme.breakpoints.down('xs'));\n    const [anchorEl, setAnchorEl] = useState(null);\n    const isProfileMenuOpen = Boolean(anchorEl);\n\n    const getUserFromLocalStorage = () => {\n        let user = null;\n        if (localStorage.getItem('token') !== null) {\n            user = jwtDecode(localStorage.getItem('token'));\n        }\n        return user;\n    }\n    const [user, setUser] = useState(getUserFromLocalStorage());\n\n    useEffect(() => {\n        const loginListener = event => {\n            if (event.type === EVENT_TYPE.LOGIN) {\n                setUser(getUserFromLocalStorage());\n            }\n        };\n\n        addListener(loginListener);\n\n        return () => removeListener(loginListener);\n    }, []);\n\n    const handleUserButtonClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        setUser(null);\n        handleMenuClose();\n    };\n\n    const profileMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isProfileMenuOpen}\n            onClose={handleMenuClose}\n        >\n            {xs ? <AddJidCodeMenuItem/> : null}\n            <MenuItem onClick={handleLogout}><Trans>Logout</Trans></MenuItem>\n        </Menu>\n    );\n\n    const loggedInButtons = <>\n        {xs ? null : <AddJidCodeButton/>}\n        <Button color=\"inherit\" onClick={handleUserButtonClick} startIcon={<AccountCircle/>}>\n            {user?.name}\n        </Button>\n    </>;\n\n    return <>\n        {user ? loggedInButtons : <LoginButton/>}\n        {profileMenu}\n    </>;\n};\n","import React from \"react\";\nimport {Popup} from \"react-leaflet\";\nimport {translateCountryCode} from \"./translateCountryCode\";\nimport iso3to2 from \"country-iso-3-to-2\";\n\nexport const CountryPopup = ({stats, hoveredCountry: {feature}}) => {\n    const countryCode = iso3to2(feature.id);\n    const translatedCountryCode = translateCountryCode(countryCode);\n    const countryStats = stats.countryMap[countryCode.toLowerCase()];\n\n    let countryJidCount = 0;\n    if (countryStats) {\n        countryJidCount = countryStats.jids;\n    }\n\n    return <Popup closeButton={false}>{translatedCountryCode} {countryJidCount}</Popup>\n};\n","import React, {useEffect, useMemo, useState} from 'react';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {GeoJSON, Map as LeafletMap} from \"react-leaflet\";\nimport iso3to2 from 'country-iso-3-to-2';\nimport geoJson from './geojson/countries.geo';\nimport moment from 'moment';\nimport {Trans} from \"@lingui/macro\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport logoImage from './logo_50x50.png';\nimport {api, newCountryTime} from \"./config\";\nimport {UserButton} from \"./UserButton\";\nimport {translateCountryCode} from \"./translateCountryCode\";\nimport {CountryPopup} from \"./CountryPopup\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {addListener, EVENT_TYPE, removeListener} from \"./eventManager\";\n\nconst styles = {\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        colorPrimary: '#FFFFFF'\n    },\n    title: {\n        marginLeft: 24,\n        flexGrow: 1,\n    },\n    content: {\n        paddingTop: 70,\n        flex: 1,\n    },\n    box: {\n        paddingTop: 8,\n    },\n    boxHeader: {\n        marginLeft: 16,\n    },\n    statNumber: {\n        textAlign: 'right'\n    },\n    totals: {\n        padding: 8\n    },\n    new: {\n        backgroundColor: '#FFFF00'\n    }\n};\n\nexport const App = withStyles(styles)(props => {\n    const {classes} = props;\n\n    const [stats, setStats] = useState({totals: {jids: 0, unique: 0, countries: 0}, users: [], countries: []});\n    const [loading, setLoading] = useState(true);\n    const [hoveredCountry, setHoveredCountry] = useState(null);\n    const [zoomBounds, setZoomBounds] = useState(null);\n    const countryBounds = useMemo(() => ({}), []);\n\n    const refreshStats = async (backgroundFetch = true) => {\n        try {\n            const stats = await api.getStats();\n            stats.countryMap = stats.countries.reduce((lookupMap, country) => {\n                lookupMap[country.country] = country;\n                return lookupMap;\n            }, {});\n            setStats(stats);\n        } catch (e) {\n            if (backgroundFetch) {\n                console.warn(e);\n            } else {\n                throw e;\n            }\n        }\n    };\n\n    useEffect(() => {\n        const fetchStats = async () => {\n            await refreshStats(false);\n            setLoading(false);\n        };\n        fetchStats().then(() => {\n            setInterval(refreshStats, 5 * 1000);\n        });\n    }, []);\n\n    useEffect(() => {\n        const addJidCodeAddedListener = async event => {\n            if (event.type === EVENT_TYPE.JID_CODE_ADDED) {\n                await refreshStats();\n            }\n        };\n\n        addListener(addJidCodeAddedListener);\n\n        return () => removeListener(addJidCodeAddedListener);\n    }, []);\n\n    const center = [30, 10];\n    const newCountryIndicator = moment().subtract(newCountryTime, 'minutes');\n\n    return (\n        <div className={classes.root}>\n            <AppBar position={'fixed'} className={classes.appBar} color=\"default\">\n                <Toolbar>\n                    <img src={logoImage} height={50} alt=\"Jota/Joti 2020\"/>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                        Jota/Joti 2020\n                    </Typography>\n                    <UserButton/>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.content}>\n                {loading ? (<div><Trans>Loading</Trans></div>) : (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.totals}>\n                                <Grid container alignItems=\"center\" justify=\"space-around\" direction=\"row\">\n                                    <Grid item>\n                                        <Typography variant=\"body2\"><Trans>Total number of JID\n                                            codes: {stats.totals.jids}</Trans></Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"body2\"><Trans>Unique JID\n                                            codes: {stats.totals.unique}</Trans></Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"body2\"><Trans>Unique\n                                            countries: {stats.totals.countries}</Trans></Typography>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} sm={6} xl={4}>\n                            <Paper>\n                                <LeafletMap center={center} zoom={2} bounds={zoomBounds}>\n                                    <GeoJSON data={geoJson} style={feature => {\n                                        const countryCode = iso3to2(feature.id) ? iso3to2(feature.id).toLowerCase() : null;\n                                        const statsCountry = stats.countryMap[countryCode];\n                                        const firstCreated = statsCountry ? moment(statsCountry.created) : null;\n                                        const newlyCreated = firstCreated && newCountryIndicator.isBefore(firstCreated);\n                                        return {\n                                            weight: 1,\n                                            color: '#8a8a8a',\n                                            fillColor: newlyCreated ? '#FFFF00' : statsCountry ? '#0000FF' : '#888888',\n                                            interactive: !!statsCountry\n                                        };\n                                    }} onEachFeature={(feature, layer) => {\n                                        const countryCode = iso3to2(feature.id) ? iso3to2(feature.id).toLowerCase() : null;\n                                        const statsCountry = stats.countryMap[countryCode];\n\n                                        countryBounds[countryCode] = layer.getBounds();\n\n                                        if (statsCountry) {\n                                            layer.on('mouseover', () => {\n                                                setHoveredCountry({\n                                                    feature\n                                                });\n                                            });\n                                            layer.on('mouseout', () => {\n                                                setHoveredCountry(null);\n                                            });\n                                        }\n                                    }}>\n                                        {hoveredCountry ?\n                                            <CountryPopup hoveredCountry={hoveredCountry} stats={stats}/> : null}\n                                    </GeoJSON>\n                                </LeafletMap>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} sm={6} xl={4}>\n                            <Paper className={classes.box}>\n                                <Typography variant=\"h6\"\n                                            className={classes.boxHeader}><Trans>Scoreboard</Trans></Typography>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell><Trans>Name</Trans></TableCell>\n                                            <TableCell align=\"right\"><Trans>Countries</Trans></TableCell>\n                                            <TableCell align=\"right\"><Trans>Unique codes</Trans></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {stats.users.map((user, index) => (\n                                            <TableRow key={`${user.name}-${index}`}>\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    {user.name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">{user.countries}</TableCell>\n                                                <TableCell align=\"right\">{user.jids}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} xl={4}>\n                            <Paper className={classes.box}>\n                                <Typography variant=\"h6\"\n                                            className={classes.boxHeader}><Trans>Countries</Trans></Typography>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell><Trans>Country name</Trans></TableCell>\n                                            <TableCell align=\"right\"><Trans>Unique codes</Trans></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {stats.countries.map(country => {\n                                            const firstCreated = moment(country.created);\n                                            const newlyCreated = newCountryIndicator.isBefore(firstCreated);\n                                            return (\n                                                <TableRow key={country.country}\n                                                          className={newlyCreated ? classes.new : ''}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        <IconButton size=\"small\"\n                                                           onClick={() => {\n                                                               window.scrollTo({top: 0, behavior: 'smooth'});\n                                                               setZoomBounds(countryBounds[country.country]);\n                                                           }}>\n                                                            <SearchIcon fontSize=\"small\"/>\n                                                        </IconButton>\n                                                        {translateCountryCode(country.country.toUpperCase())}\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">{country.jids}</TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                )}\n            </div>\n        </div>\n    );\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {I18nProvider} from \"@lingui/react\";\nimport da from './locales/da/messages';\n\nexport const IntlProvider = props => {\n    const usersLocale = navigator.language;\n\n    const catalogs = {\n        da\n    };\n\n    return (\n        <I18nProvider language={usersLocale} catalogs={catalogs}>\n            {props.children}\n        </I18nProvider>\n    );\n};\n","import React from \"react\";\nimport * as Sentry from '@sentry/react';\n\nconst FallbackComponent = () => {\n    return (\n        <div>An error has occurred</div>\n    );\n}\n\nexport const ErrorBoundary = ({children}) => {\n    return (\n        <Sentry.ErrorBoundary fallback={FallbackComponent} showDialog>\n            {children}\n        </Sentry.ErrorBoundary>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {IntlProvider} from \"./intlProvider\";\nimport {ErrorBoundary} from \"./ErrorBoundary\";\n\nSentry.init({\n    dsn: \"https://73832ea57a124280a31e284c12c71f19@o416351.ingest.sentry.io/5310749\",\n    release: `jid-ui@${process.env.REACT_APP_JID_UI_VERSION ? process.env.REACT_APP_JID_UI_VERSION : 'local'}`,\n    environment: process.env.REACT_APP_JID_UI_PROD_ENVIRONMENT ? 'prod' : 'dev',\n});\n\nReactDOM.render(<IntlProvider><ErrorBoundary><App/></ErrorBoundary></IntlProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}