{"version":3,"sources":["logo_50x50.png","locales/da/messages.js","config.js","api.js","eventManager.js","CreateUserModal.js","LoginModal.js","UserButton.js","App.js","serviceWorker.js","intl.js","index.js"],"names":["module","exports","languageData","n","ord","s","String","split","i","t0","Number","messages","a","api","serverUrl","this","_serverUrl","fetch","_getUrl","then","response","json","name","username","password","method","headers","body","JSON","stringify","path","EVENT_TYPE","listeners","publish","event","forEach","listener","CreateUserModal","open","handleClose","useState","setName","setUsername","setPassword","createUser","error","alert","localStorage","setItem","token","type","Dialog","onClose","aria-labelledby","DialogTitle","id","i18n","DialogContent","TextField","autoFocus","margin","label","_","value","onChange","target","fullWidth","autoComplete","DialogActions","Button","onClick","color","variant","CreateUserButton","setOpen","LoginModal","handleLogin","login","loginResult","DialogContentText","LoginButton","UserButton","anchorEl","setAnchorEl","isProfileMenuOpen","Boolean","getUserFromLocalStorage","user","getItem","jwtDecode","setUser","push","handleMenuClose","profileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","removeItem","currentTarget","App","withStyles","root","display","appBar","colorPrimary","title","marginLeft","flexGrow","content","paddingTop","flex","box","boxHeader","statNumber","textAlign","totals","padding","new","backgroundColor","props","classes","jids","unique","countries","users","stats","setStats","loading","setLoading","countryMap","reduce","lookupMap","country","code","useEffect","fetchStats","getStats","setInterval","newCountryIndicator","moment","subtract","className","AppBar","position","Toolbar","src","logoImage","height","alt","Typography","Grid","container","spacing","item","xs","Paper","alignItems","justify","direction","Map","center","zoom","GeoJSON","data","geoJson","style","feature","countryCode","iso3to2","toLowerCase","statsCountry","firstCreated","created","weight","fillColor","isBefore","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","index","key","component","scope","newlyCreated","toUpperCase","window","location","hostname","match","Intl","usersLocale","navigator","language","catalogs","da","children","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1204939.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_50x50.c2e75483.png\";","/* eslint-disable */module.exports={languageData:{\"plurals\":function(n,ord){var s=String(n).split(\".\"),i=s[0],t0=Number(s[0])==n;if(ord)return\"other\";return n==1||!t0&&(i==0||i==1)?\"one\":\"other\"}},messages:{\"Cancel\":\"Annuller\",\"Countries\":\"Lande\",\"Country name\":\"Landenavn\",\"Create user\":\"Opret bruger\",\"If you do not have a user yet, click here:\":\"Hvis du ikke har en bruger endnu, klik her:\",\"Loading\":\"Indl\\xE6ser\",\"Login\":\"Log ind\",\"Login to submit JID codes.\":\"Log ind for at indsende JID koder\",\"Logout\":\"Log ud\",\"Name\":\"Navn\",\"Password\":\"Kodeord\",\"Scoreboard\":\"Stillinger\",\"Total number of JID codes: {0}\":function(a){return[\"Total antal JID koder: \",a(\"0\")]},\"Unique JID codes: {0}\":function(a){return[\"Unikke JID koder: \",a(\"0\")]},\"Unique codes\":\"Unikke koder\",\"Unique countries: {0}\":function(a){return[\"Unikke lande: \",a(\"0\")]},\"Username\":\"Brugernavn\"}};","import {Api} from \"./api\";\n\nexport const api = new Api('http://localhost:4000');\nexport const newCountryTime = 30; // minutes old\n","export class Api {\n\n    constructor(serverUrl) {\n        this._serverUrl = serverUrl;\n    }\n\n    async getStats() {\n        return fetch(this._getUrl('/stats')).then(response => response.json());\n    }\n\n    async createUser(name, username, password) {\n        return fetch(this._getUrl('/createUser'), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                    name,\n                    username,\n                    password\n                }\n            )\n        }).then(response => response.json());\n    }\n\n    async login(username, password) {\n        return fetch(this._getUrl('/login'), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                    username,\n                    password\n                }\n            )\n        }).then(response => response.json());\n    }\n\n    _getUrl(path) {\n        return `${this._serverUrl}${path}`;\n    }\n\n}\n","export const EVENT_TYPE = {\n    LOGIN: 'LOGIN'\n};\n\nconst listeners = [];\n\nexport const addListener = listener => {\n    listeners.push(listener);\n};\n\nexport const removeListener = listener => {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n        listeners.splice(index, 1);\n    }\n};\n\nexport const publish = event => {\n    listeners.forEach(listener => listener(event));\n};\n","import React, {useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {t, Trans} from \"@lingui/macro\";\nimport {I18n} from \"@lingui/react\";\nimport {api} from \"./config\";\nimport {EVENT_TYPE, publish} from \"./eventManager\";\n\nconst CreateUserModal = ({open, handleClose}) => {\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const createUser = async () => {\n        const response = await api.createUser(name, username, password);\n        if (response.error) {\n            alert(response.error);\n            return;\n        }\n        localStorage.setItem('token', response.token);\n        publish({\n            type: EVENT_TYPE.LOGIN\n        });\n        handleClose();\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\"><Trans>Create user</Trans></DialogTitle>\n            <I18n>\n                {({i18n}) => (\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label={i18n._(t`Name`)}\n                            value={name}\n                            type=\"text\"\n                            onChange={event => setName(event.target.value)}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"username\"\n                            label={i18n._(t`Username`)}\n                            value={username}\n                            type=\"text\"\n                            onChange={event => setUsername(event.target.value)}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"password\"\n                            label={i18n._(t`Password`)}\n                            value={password}\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={event => setPassword(event.target.value)}\n                            fullWidth\n                        />\n                    </DialogContent>\n                )}\n            </I18n>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    <Trans>Cancel</Trans>\n                </Button>\n                <Button onClick={createUser} color=\"primary\" variant=\"contained\">\n                    <Trans>Create user</Trans>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport const CreateUserButton = ({onClose}) => {\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <Button color=\"inherit\" onClick={() => setOpen(true)}><Trans>Create user</Trans></Button>\n        <CreateUserModal open={open} handleClose={() => {\n            setOpen(false);\n            onClose();\n        }}/>\n    </>;\n};\n","import React, {useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {t, Trans} from \"@lingui/macro\";\nimport {I18n} from \"@lingui/react\";\nimport {CreateUserButton} from \"./CreateUserModal\";\nimport {api} from \"./config\";\nimport {EVENT_TYPE, publish} from \"./eventManager\";\n\nconst LoginModal = ({open, handleClose}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = async () => {\n        const loginResult = await api.login(username, password);\n        if (loginResult.error) {\n            alert(loginResult.error);\n            return;\n        }\n        localStorage.setItem('token', loginResult.token);\n        publish({\n            type: EVENT_TYPE.LOGIN\n        });\n        handleClose();\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\"><Trans>Login</Trans></DialogTitle>\n            <I18n>\n                {({i18n}) => (\n                    <DialogContent>\n                        <DialogContentText>\n                            <Trans>Login to submit JID codes.</Trans>\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"username\"\n                            label={i18n._(t`Username`)}\n                            value={username}\n                            type=\"text\"\n                            onChange={event => setUsername(event.target.value)}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"password\"\n                            label={i18n._(t`Password`)}\n                            value={password}\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={event => setPassword(event.target.value)}\n                            fullWidth\n                        />\n                        <DialogContentText>\n                            <br/><br/>\n                            <Trans>If you do not have a user yet, click here:</Trans>\n                            <CreateUserButton onClose={handleClose}/>\n                        </DialogContentText>\n                    </DialogContent>\n                )}\n            </I18n>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    <Trans>Cancel</Trans>\n                </Button>\n                <Button onClick={handleLogin} color=\"primary\" variant=\"contained\">\n                    <Trans>Login</Trans>\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport const LoginButton = () => {\n    const [open, setOpen] = useState(false);\n\n    return <>\n        <Button color=\"inherit\" onClick={() => setOpen(true)}><Trans>Login</Trans></Button>\n        <LoginModal open={open} handleClose={() => setOpen(false)}/>\n    </>;\n};\n","import React, {useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Trans} from \"@lingui/macro\";\nimport jwtDecode from 'jwt-decode';\nimport {LoginButton} from \"./LoginModal\";\nimport {addListener, EVENT_TYPE} from \"./eventManager\";\n\nexport const UserButton = () => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const isProfileMenuOpen = Boolean(anchorEl);\n\n    const getUserFromLocalStorage = () => {\n        let user = null;\n        if (localStorage.getItem('token') !== null) {\n            user = jwtDecode(localStorage.getItem('token'));\n        }\n        return user;\n    }\n    const [user, setUser] = useState(getUserFromLocalStorage());\n\n    addListener(event => {\n        if (event.type === EVENT_TYPE.LOGIN) {\n            setUser(getUserFromLocalStorage());\n        }\n    });\n\n    const handleUserButtonClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        setUser(null);\n        handleMenuClose();\n    };\n\n    const profileMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isProfileMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleLogout}><Trans>Logout</Trans></MenuItem>\n        </Menu>\n    );\n\n    return <>\n        {user ? <Button color=\"inherit\" onClick={handleUserButtonClick}>{user.name}</Button> : <LoginButton/>}\n        {profileMenu}\n    </>;\n};\n","import React, {useEffect, useState} from 'react';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {GeoJSON, Map} from \"react-leaflet\";\nimport iso3to2 from 'country-iso-3-to-2';\nimport geoJson from './geojson/countries.geo';\nimport moment from 'moment';\nimport {Trans} from \"@lingui/macro\";\n\nimport logoImage from './logo_50x50.png';\nimport countries from './countries';\nimport {api, newCountryTime} from \"./config\";\nimport {UserButton} from \"./UserButton\";\n\nconst styles = {\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        colorPrimary: '#FFFFFF'\n    },\n    title: {\n        marginLeft: 24,\n        flexGrow: 1,\n    },\n    content: {\n        paddingTop: 70,\n        flex: 1,\n    },\n    box: {\n        paddingTop: 8,\n    },\n    boxHeader: {\n        marginLeft: 16,\n    },\n    statNumber: {\n        textAlign: 'right'\n    },\n    totals: {\n        padding: 8\n    },\n    new: {\n        backgroundColor: '#FFFF00'\n    }\n};\n\nexport const App = withStyles(styles)(props => {\n    const {classes} = props;\n\n    const [stats, setStats] = useState({totals: {jids: 0, unique: 0, countries: 0}, users: [], countries: []});\n    const [loading, setLoading] = useState(true);\n\n    const countryMap = countries.reduce((lookupMap, country) => {\n        lookupMap[country.code] = country.name;\n        return lookupMap;\n    }, {});\n\n    useEffect(() => {\n        const fetchStats = async () => {\n            const stats = await api.getStats();\n            stats.countryMap = stats.countries.reduce((lookupMap, country) => {\n                lookupMap[country.country] = country;\n                return lookupMap;\n            }, {});\n            setStats(stats);\n            setLoading(false);\n        };\n        fetchStats().then(() => {\n            setInterval(fetchStats, 5 * 1000);\n        });\n    }, []);\n\n    const center = [30, 10];\n    const newCountryIndicator = moment().subtract(newCountryTime, 'minutes');\n\n    return (\n        <div className={classes.root}>\n            <AppBar position={'fixed'} className={classes.appBar} color=\"default\">\n                <Toolbar>\n                    <img src={logoImage} height={50} alt=\"Jota/Joti 2019\"/>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                        Jota/Joti 2019\n                    </Typography>\n                    <UserButton/>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.content}>\n                {loading ? (<div><Trans>Loading</Trans></div>) : (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.totals}>\n                                <Grid container alignItems=\"center\" justify=\"space-around\" direction=\"row\">\n                                    <Grid item>\n                                        <Typography variant=\"body2\"><Trans>Total number of JID\n                                            codes: {stats.totals.jids}</Trans></Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"body2\"><Trans>Unique JID\n                                            codes: {stats.totals.unique}</Trans></Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"body2\"><Trans>Unique\n                                            countries: {stats.totals.countries}</Trans></Typography>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Paper>\n                                <Map center={center} zoom={2}>\n                                    <GeoJSON data={geoJson} style={feature => {\n                                        const countryCode = iso3to2(feature.id) ? iso3to2(feature.id).toLowerCase() : null;\n                                        const statsCountry = stats.countryMap[countryCode];\n                                        const firstCreated = statsCountry ? moment(statsCountry.created) : null;\n                                        const newlyCreated = firstCreated && newCountryIndicator.isBefore(firstCreated);\n                                        return {\n                                            weight: 1,\n                                            color: '#8a8a8a',\n                                            fillColor: newlyCreated ? '#FFFF00' : statsCountry ? '#0000FF' : '#888888'\n                                        };\n                                    }}/>\n                                </Map>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper className={classes.box}>\n                                <Typography variant=\"h6\"\n                                            className={classes.boxHeader}><Trans>Scoreboard</Trans></Typography>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell><Trans>Name</Trans></TableCell>\n                                            <TableCell align=\"right\"><Trans>Countries</Trans></TableCell>\n                                            <TableCell align=\"right\"><Trans>Unique codes</Trans></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {stats.users.map((user, index) => (\n                                            <TableRow key={`${user.name}-${index}`}>\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    {user.name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">{user.countries}</TableCell>\n                                                <TableCell align=\"right\">{user.jids}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper className={classes.box}>\n                                <Typography variant=\"h6\"\n                                            className={classes.boxHeader}><Trans>Countries</Trans></Typography>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell><Trans>Country name</Trans></TableCell>\n                                            <TableCell align=\"right\"><Trans>Unique codes</Trans></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {stats.countries.map(country => {\n                                            const firstCreated = moment(country.created);\n                                            const newlyCreated = newCountryIndicator.isBefore(firstCreated);\n                                            return (\n                                                <TableRow key={country.country}\n                                                          className={newlyCreated ? classes.new : ''}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {countryMap[country.country.toUpperCase()] ? countryMap[country.country.toUpperCase()] : country.country}\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">{country.jids}</TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                )}\n            </div>\n        </div>\n    );\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {I18nProvider} from \"@lingui/react\";\nimport da from './locales/da/messages';\n\nexport const Intl = props => {\n    const usersLocale = navigator.language;\n\n    const catalogs = {\n        da\n    };\n\n    return (\n        <I18nProvider language={usersLocale} catalogs={catalogs}>\n            {props.children}\n        </I18nProvider>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Intl} from \"./intl\";\n\nReactDOM.render(<Intl><App/></Intl>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}