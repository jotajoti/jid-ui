# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  "Build and Test Code":
    docker:
      # specify the version you desire here
      - image: circleci/node:14.18

    working_directory: ~/repo

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "be:07:37:83:47:aa:52:a2:f6:0a:08:2c:8d:1d:1d:fd"

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run: yarn build

      - run: bash <(curl -s https://codecov.io/bash)
  
  "Build and Push Docker Image":
    docker:
      - image: cimg/base:2021.10
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run: apk add make curl
      - run: mkdir -vp ~/.docker/cli-plugins/
      - run: curl --silent -L --output ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.9.1/buildx-v0.9.1.linux-amd64
      - run: chmod a+x ~/.docker/cli-plugins/docker-buildx
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker buildx build --platform linux/arm64 --cache-from=app -t jotajoti/jid-ui .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p caches
            docker save -o caches/app.tar jotajoti/jid-ui
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - caches/app.tar
      - run:
          name: Login and push to Docker Hub
          command: |
            echo "$DOCKERHUB_ACCESS_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push jotajoti/jid-ui:latest

workflows:
  version: 2
  Build:
    jobs:
      - "Build and Test Code":
          filters:
            branches:
              ignore: master
  "Build and Publish":
    jobs:
      - "Build and Test Code":
          filters:
            branches:
              only: master
      - "Build and Push Docker Image":
          context: MainContext
          requires:
            - "Build and Test Code"
          filters:
            branches:
              only: master